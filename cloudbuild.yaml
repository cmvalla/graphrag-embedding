steps:
# Step 1: Build, Cache, and Push
- name: '${_LOCATION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_ID}/gcp-terraform-build:latest'
  id: build-and-push
  entrypoint: bash
  args:
  - '-c'
  - |
    # Pull the latest image to use as a cache source (fail gracefully if it doesn't exist)
    docker pull ${_LOCATION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}:latest || true

    # Build the new image, using the pulled image as a cache
    docker build \
      --cache-from ${_LOCATION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}:latest \
      --tag ${_LOCATION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}:$BUILD_ID \
      --tag ${_LOCATION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}:latest \
      .
    
    # Push all tags for the newly built image
    docker push ${_LOCATION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME} --all-tags

# Step 2A: Deploy the service
- name: '${_LOCATION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_ID}/gcp-terraform-build:latest'
  id: deploy
  entrypoint: bash
  args:
  - '-c'
  - |
    gcloud secrets versions access latest --secret="${_TFVARS_SECRET_NAME}" --project="${_PROJECT_ID}" > terraform/terraform.tfvars
    cd terraform
    terraform init -backend-config="prefix=cloud-spanner-demo/${_PROJECT_SUFFIX}/graphrag-embedding"
    terraform apply -auto-approve -var="git_tag=$BUILD_ID" -var="image_url=${_LOCATION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}"
  waitFor: ['build-and-push']

# Step 2B: Clean up old images (runs in parallel with deploy)
- name: '${_LOCATION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_ID}/gcp-terraform-build:latest'
  id: cleanup-images
  entrypoint: bash
  args:
  - 'cleanup_images.sh'
  - '${_LOCATION}'
  - '${_PROJECT_ID}'
  - '${_REPOSITORY_ID}'
  - '${_IMAGE_NAME}'
  waitFor: ['build-and-push']

images:
- '${_LOCATION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}:$BUILD_ID'
- '${_LOCATION}-docker.pkg.dev/${_PROJECT_ID}/${_REPOSITORY_ID}/${_IMAGE_NAME}:latest'

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _PROJECT_ID: '${PROJECT_ID}'
  _LOCATION: 'europe-west1'
  _REPOSITORY_ID: 'my-docker-repo'
  _IMAGE_NAME: 'graphrag-fn-embedding'
  _PROJECT_SUFFIX: '' # This will be overridden by the trigger
  _TFVARS_SECRET_NAME: 'embedding-tfvars'

